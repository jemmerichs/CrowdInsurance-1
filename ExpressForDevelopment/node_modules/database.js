var queries = require('queries.js');

var getDBPromis = function(){
  var credentials = require('dbconfig.js');
  var pgp = require('pg-promise')();
  var db = pgp(credentials.url);
  return db;
}

exports.getVersicherung = function (req, res, next) {
  var param, query;
  if(req.query.id != undefined){
    param = req.query.id;
    query = require('queries.js').getVersicherungByID;
  } else if(req.query.personid != undefined){
    param = req.query.personid;
    console.log("count: " + req.query.count);
    if(req.query.count == undefined || req.query.count == false){
      query = require('queries.js').getVersicherungByPerson;
    } else {
      query = require('queries.js').getVersicherungCountByPerson;
    }
  } else{
    res.status(406).send('Ungueltige Parameter!'); return;
  }
  var db = getDBPromis();
  db.any(query,param).then(
    function(data){
      res.status(200).json({
        status: 'success',
        data: data,
    });}
  ).catch(
    function(err){
      return next(err);
    }
  );
}



exports.getSchadensfaelle = function (req, res, next) {
  var query = 'SELECT "id", "versicherungID", "beschreibung", "schadenshoehe", "zeitpunkt", "auszahlungsZeitpunkt", "Auszahlungsstatus" FROM "smartinsurance"."Schadensfall";';
  var successCallback = function(data){sendDataResponse(data);}
  var errorCallback = function(err){return next(err);};
  sendDBQuery(query, successCallback, errorCallback);
}

exports.getVersicherungen = function (req, res, next) {
  var credentials = require('dbconfig.js');
  var pgp = require('pg-promise')();
  var db = pgp(credentials.url);

  db.any('SELECT id, "personID", name, versicherungshoehe, beitrag, bezeichnung, "abschlussZeitpunkt", "kuendigungsZeitpunkt", "istGekuendigt" FROM "Versicherung";').then(
   function (data) {
    res.status(200).json({
        status: 'success',
        data: data,
      });
    }).catch(function (err) {
      return next(err);
   });
}

exports.gib = function (callback){
  var pgp = require('pg-promise');
  var dbconfig = require('dbconfig.js');

  var client = new pg.Client(dbconfig.url);
  client.connect();
  var query = client.query('SELECT "ID", name FROM "Versicherungsobjekt"');
  var results = [];
  query.on('row', function(row) {
    results.push({
      id : row.ID,
      name : row.name
    });
  });
  query.on('end', function() {
    client.end();
    callback(results);
  });
}


//1. Iteration Datenbankzugriffe:
//listOfVersicherung(filter)
//listOfVersicherung(personID)      -> SELECT "id"
//showVersicherung(versicherungID)
//neueVersicherungAnlegen()
//investieren(versicherungID) -> neue Investition anlegen UND zahlungsfluss
//listOfInvestitionen(personID)
//listOfInvestitionen(versicherungID)
//showInvestition(investitionID)
//
//Mechanismus zur periodischen Durchführung der Zahlungen (Beiträge und Renditen)
