image: docker:git
services:
- docker:dind

stages:
- build
#- test
#- release
- deploy

variables:
  CONTAINER_TEST_IMAGE: registry.cloudf.de/matthias/testci:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: registry.cloudf.de/matthias/testci:latest
  POSTGRES_DB: smartbackenddevelopment
  POSTGRES_USER: smartinsurance
  POSTGRES_PASSWORD: "123456"

build:
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.cloudf.de
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
#
#build_android:
#  image: tobitheo/ionic-build-android-ci-docker:latest
#  stage: build
#  script:
#    - cd ./SmartInsurance/
#    - cp debug.keystore ~/.android/debug.keystore
#    - npm install
#    - bower install --allow-root
#    - chmod +x hooks/after_prepare/010_add_platform_class.js
#    - ionic config build
#    - ionic state restore
#    - ionic build android
#    - cp /builds/matthias/testci/SmartInsurance/platforms/android/build/outputs/apk/android-debug.apk /builds/matthias/testci/smartinsurance.apk
#  artifacts:
#    paths:
#      - /builds/matthias/testci/smartinsurance.apk

#mochatest:
#  image: $CONTAINER_TEST_IMAGE
#  stage: test
#  services:
#    - registry.cloudf.de/matthias/depostgresdocker:latest
#  variables:
#      DB_USER: smartinsurance
#      DB_PASSWORD: "123456"
#      DB_HOST: registry.cloudf.de__matthias__depostgresdocker
#      DB_PORT: "5432"
#      DB_DATABASENAME: smartbackenddevelopment
#      DB_SSL: "false"
#
#  script:
#    - ls -lah
#    - pwd
#    - npm install mocha -g --loglevel warn
#    - cd ExpressForDevelopment && npm install --loglevel warn
#    - npm test

#release-image:
#  stage: release
#  before_script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.cloudf.de
#  script:
#    - docker pull $CONTAINER_TEST_IMAGE
#    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
#    - docker push $CONTAINER_RELEASE_IMAGE
#  only:
#    - master

deploy:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - touch id_rsa
    - chmod 600 id_rsa
    - echo "$SSH_PRIVATE_KEY" > id_rsa
#    - echo "" | ssh-add id_rsa
#    - rm id_rsa
  script:
    - ssh deploy@192.168.122.10 -i id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "cd /var/opt/dockercompose/ && docker-compose up --force-recreate -d"
    - rm id_rsa
#  only:
#    - master
